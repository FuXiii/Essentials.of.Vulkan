介绍
=========

.. admonition:: 更新记录
   :class: note

   * 2023/5/14 增加该文章
   * 2023/5/14 增加 ``Khronos组织`` 章节
   * 2023/5/14 增加 ``OpenGL`` 章节
   * 2023/5/14 增加 ``图形接口`` 章节

图形接口
####################

图形接口，也称图形 ``API`` ，其目的是定义一套规范用于与图形功能硬件设备进行沟通。由于市面上硬件设备产品众多每一家都可以定义一套自己设备的图形接口，这就会导致设备使用用户需要每一个设备单独适配，其工作了繁重重复不稳定，
所以硬件设备生产商联合起来定一个统一的图形接口，使用此接口可以与任何支持该接口的设备进行沟通。当今天下有四套图形标准：

1. ``OpenGL`` ：隶属于 ``Khronos`` 组织
2. ``Vulkan`` ：隶属于 ``Khronos`` 组织
3. ``DirectX`` ：隶属于微软
4. ``Metal`` ：隶属于苹果

Khronos组织
####################

``Khronos`` 原本指代的是古希腊神话传说中掌管时间的神祗 ``克罗诺斯`` ，是俄耳甫斯教（ ``Orphism`` ）的原始神，此神祗经常与宙斯他爹 ``克洛诺斯`` ( ``Kronos`` ) 搞混，因为发音基本没区别。
虽然克罗诺斯和克洛诺斯都属于古希腊神话体系，但不是同一派别（可能类似于道教中的全真和正一）。在俄耳甫斯教中克罗诺斯被称为宇宙第一因或宇宙的源头（类似道家中的道生一）。

扯远了。 ``Khronos`` 组织是一家非常著名的开源标准规范组织，像大家熟知的 ``OpenGL`` 、 ``OpenCL`` 、 ``OpenGL`` 、 ``WebGL`` 还有 ``Vulkan`` 标准都是出自该组织。

OpenGL
####################

作为跨平台跨设备的图形 ``API`` ， ``OpenGL`` 应该算是元老级别的了， ``OpenGL 1.0`` 最早发布于 ``1992年1月``，当时的图形接口只支持固定管线，并没有提供可编程的着色器特性，直到后来在 ``DirectX`` 中提供了可编程管线的功能，
``OpenGL`` 在其逼迫下，于 ``2004年9月7日`` 发布了 ``OpenGL 2.0`` 支持可编程管线，并支持将片元着色器的输出结果输出到多个帧缓存（ ``framebuffer`` ）中。随着时代的发展和硬件设备能力的提升 ``OpenGL`` 也随之进步，截止本文创作， ``OpenGL`` 最新版本为
``OpenGL 4.6`` 于 ``2017年7月31日`` 发布， ``OpenGL`` 是一种基于环境上下文（ ``context`` ）的架构，所谓环境上下文的意思是下一步的操作是基于上一步的内容继续的，比如此时拿一张白纸，上一步是将白纸涂满红色，下一步是中间画一个绿色矩形，当这个上下文执行结束
后你会得到一个在红色背景上绘制的绿色矩形画面。随着现在硬件设备的核心越来越多，多核心并行运算已成为常态，而这种基于环境上下文的机构并不是并行友好的架构（不支持多线程，虽然可以通过某些手段达到假的多线程效果）， ``OpenGL`` 已经不满足于
现代硬件设备的胃口，而在 ``2015`` 年微软发布了现代图形 ``API`` : ``DirectX 12`` ， ``Khronos`` 组织也紧随其后在 ``2015`` 的 ``GDC`` （ ``Game Developers Conference``，游戏开发者大会，简单理解就是世界各地大佬集会斗法 ）上提了一嘴我们有开发下一代图形接口。
一开始称为 ``下一代OpenGL计划`` （ ``next generation OpenGL initiative`` 或 ``glNext``），但之后更改为 ``Vulkan`` 。新的跨平台，跨设备的现代开源图形接口就此诞生，并于 ``2016年2月16日`` 正式发布 ``Vulkan 1.0`` 版本。本人也有幸于 ``2018`` 年开始研究 ``Vulkan`` 。

